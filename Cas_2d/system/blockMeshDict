/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
scale   1;
// Param√®tres
    L 1;               // Largeur de la plaque
    H 0.3;                // Distance injection/plaque
    Hi 0.01;                // Longueur d'injection
    D 0.01;			           // Diametre de l'injection
    tan_theta 0;             // Angle d'injection
    dx 0.001;             // Taille d'une maille
    n_block 3;          // Nombre de block droit ou gauche

    Ltot #eval {$H + $Hi};
    Lmg #eval {($L / 2) - ($D / 2)};
    Lmd #eval {($L / 2) + ($D / 2)};

    nbm_yi #eval {$Hi / $dx};
    nbm_yb #eval {$H / $dx};
    nbm_xi #eval {$D / $dx};
    nbm_xb #eval {(($L - $D) / (2 * $n_block)) / $dx};

    nbm_x1 #eval {floor($nbm_xb/8)};
    nbm_x2 #eval {floor($nbm_xb/4)};
    nbm_x3 #eval {floor($nbm_xb/2)};

    nbm_y1 #eval {floor($nbm_yb/8)};
    nbm_y2 #eval {floor($nbm_yb/4)};
    nbm_y3 #eval {floor($nbm_yb/2)};

    p1 #calc "($L - $D) / 6";
    p2 #calc "2 * $p1";
    p3 #calc "$p1 + $Lmd";
    p4 #calc "2 * $p1 + $Lmd";

vertices
(
  ($Lmg $H 0)         // 0
  ($Lmd $H 0)         // 1
  ($Lmd $Ltot 0)      // 2
  ($Lmg $Ltot 0)      // 3
  ($Lmg 0 0)//4
  ($Lmd 0 0)//5
  ($Lmd $H 0)//6
  ($Lmg $H 0)//7
  (0 0 0)//8
  ($p1 0 0)//9
  ($p1 $H 0)//10
  (0 $H 0)//11
  ($p1 0 0)//12
  ($p2 0 0)//13
  ($p2 $H 0)//14
  ($p1 $H 0)//15
  ($p2 0 0)//16
  ($Lmg 0 0)//17
  ($Lmg $H 0)//18
  ($p2 $H 0)//19
  ($Lmd 0 0)//20
  ($p3 0 0)//21
  ($p3 $H 0)//22
  ($Lmd $H 0)//23
  ($p3 0 0)//24
  ($p4 0 0)//25
  ($p4 $H 0)//26
  ($p3 $H 0)//27
  ($p4 0 0)//28
  ($L 0 0)//29
  ($L $H 0)//30
  ($p4 $H 0)//31

  ($Lmg $H 1)         // 0
  ($Lmd $H 1)         // 1
  ($Lmd $Ltot 1)      // 2
  ($Lmg $Ltot 1)      // 3
  ($Lmg 0 1)//4
  ($Lmd 0 1)//5
  ($Lmd $H 1)//6
  ($Lmg $H 1)//7
  (0 0 1)//8
  ($p1 0 1)//9
  ($p1 $H 1)//10
  (0 $H 1)//11
  ($p1 0 1)//12
  ($p2 0 1)//13
  ($p2 $H 1)//14
  ($p1 $H 1)//15
  ($p2 0 1)//16
  ($Lmg 0 1)//17
  ($Lmg $H 1)//18
  ($p2 $H 1)//19
  ($Lmd 0 1)//20
  ($p3 0 1)//21
  ($p3 $H 1)//22
  ($Lmd $H 1)//23
  ($p3 0 1)//24
  ($p4 0 1)//25
  ($p4 $H 1)//26
  ($p3 $H 1)//27
  ($p4 0 1)//28
  ($L 0 1)//29
  ($L $H 1)//30
  ($p4 $H 1)//31
);

blocks
(
  // Injection
  hex (0 1 2 3 32 33 34 35) ($nbm_xi $nbm_yi 1) simpleGrading (1 1 1)

  // Block central
  hex (4 5 6 7 36 37 38 39) ($nbm_xi $nbm_yb 1) simpleGrading (1 1 1)

  // Blocks gauche
  hex (8 9 10 11 40 41 42 43) ($nbm_x1 $nbm_y1 1) simpleGrading (1 1 1)
  hex (12 13 14 15 44 45 46 47) ($nbm_x2 $nbm_y2 1) simpleGrading (1 1 1)
  hex (16 17 18 19 48 49 50 51) ($nbm_x3 $nbm_y3 1) simpleGrading (1 1 1)

  // Blocks droit
  hex (20 21 22 23 52 53 54 55) ($nbm_x3 $nbm_y3 1) simpleGrading (1 1 1)
  hex (24 25 26 27 56 57 58 59) ($nbm_x2 $nbm_y2 1) simpleGrading (1 1 1)
  hex (28 29 30 31 60 61 62 63) ($nbm_x1 $nbm_y1 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    up
    {
        type wall;
        faces
        (
            (3 35 34 2)
        );
    }
    bottom
    {
        type patch;
        faces
        (
            (8 40 41 9)
            (12 44 45 13)
            (16 48 49 17)
            (4 36 37 5)
            (20 52 53 21)
            (24 56 57 25)
            (28 60 61 29)
        );
    }
    right
    {
        type patch;
        faces
        (
            (30 62 61 29)
        );
    }
    left
    {
        type patch;
        faces
        (
            (11 43 40 8)
        );
    }
    fixedWalls
    {
        type wall;
        faces
        (
            (11 43 42 10)
            (15 47 46 14)
            (19 51 50 18)
            (3 35 32 0)
            (2 34 33 1)
            (23 55 54 22)
            (27 59 58 26)
            (31 63 62 30)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
          // Front
            (0 1 2 3)
            (4 5 6 7)
            (8 9 10 11)
            (12 13 14 15)
            (16 17 18 19)
            (20 21 22 23)
            (24 25 26 27)
            (28 29 30 31)
          // Back
            (32 33 34 35)
            (36 37 38 39)
            (40 41 42 43)
            (44 45 46 47)
            (48 49 50 51)
            (52 53 54 55)
            (56 57 58 59)
            (60 61 62 63)
        );
    }
    /*
    Interface1M
    {
        type wall;
        faces
        (
            (0 32 33 1)
        );
    }
    Interface1S
    {
        type wall;
        faces
        (
            (7 39 38 6)
        );
    }
    Interface2M
    {
        type wall;
        faces
        (
            (7 39 36 4)
        );
    }
    Interface2S
    {
        type wall;
        faces
        (
            (18 50 49 17)
        );
    }
    Interface3M
    {
        type wall;
        faces
        (
            (19 51 48 16)
        );
    }
    Interface3S
    {
        type wall;
        faces
        (
            (14 46 45 13)
        );
    }
    Interface4M
    {
        type wall;
        faces
        (
            (15 47 44 12)
        );
    }
    Interface4S
    {
        type wall;
        faces
        (
            (10 42 41 9)
        );
    }
    Interface5M
    {
        type wall;
        faces
        (
            (6 38 37 5)
        );
    }
    Interface5S
    {
        type wall;
        faces
        (
            (23 55 52 20)
        );
    }
    Interface6M
    {
        type wall;
        faces
        (
            (22 54 53 21)
        );
    }
    Interface6S
    {
        type wall;
        faces
        (
            (27 59 56 24)
        );
    }
    Interface7M
    {
        type wall;
        faces
        (
            (26 58 57 25)
        );
    }
    Interface7S
    {
        type wall;
        faces
        (
            (31 63 60 28)
        );
    }
    */
);

mergePatchPairs
(
  /*
    (Interface1M Interface1S)
    (Interface2M Interface2S)
    (Interface3M Interface3S)
    (Interface4M Interface4S)
    (Interface5M Interface5S)
    (Interface6M Interface6S)
    (Interface7M Interface7S)
  */
);

// ************************************************************************* //
